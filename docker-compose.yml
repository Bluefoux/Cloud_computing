version: '4.46'
services:
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_DATABASE: my_database
      MYSQL_ROOT_HOST: "%"
    volumes:
      - mysqldata:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -prootpass --silent"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      mynet:
        aliases: [mysql]

  traefik:
    image: traefik:v3.1
    restart: always
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      # enable access logs if you want
      - --accesslog=true
    ports:
      - "5000:80"   # frontend calls http://localhost:5000 -> Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      mysql:
        condition: service_healthy
      backend:
        condition: service_started
    networks: [mynet]

  backend:
    build: ./backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_HOST: mysql
      DB_PORT: "3306"
      DB_USER: root                 # or create a normal user via envs
      DB_PASSWORD: my-secret-pw
      DB_NAME: my_database
      DATABASE_URL: mysql://root:my-secret-pw@mysql:3306/my_database
    networks: [mynet]
    labels:
      - "traefik.enable=true"
      # router: catch-all on / (you can change to /api if you prefer)
      - "traefik.http.routers.backend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=3300"


  frontend:
    build: ./swimming-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000
    networks:
      - mynet

networks:
  mynet:
    external: true

volumes:
  mysqldata: